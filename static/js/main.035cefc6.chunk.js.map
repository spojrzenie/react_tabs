{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTabId","some","tab","id","className","map","item","href","onClick","title","find","content","App","useState","setSelectedTabId","selectedTabs","ReactDOM","render","document","getElementById"],"mappings":"iMAYaA,EAA4B,SAAC,GAMpC,IAAD,EAJDC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAIIC,EADeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KACdA,EAAgBD,EAAK,GAAGM,GAE3D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAC,GAAI,OACZ,oBACEF,UAAWJ,IAAgBM,EAAKH,GAC5B,YACA,GACJ,UAAQ,MAJV,SAOE,mBACEI,KAAI,WAAMD,EAAKH,IACf,UAAQ,UACRK,QAAS,WACHF,EAAKH,KAAOL,GACdC,EAAcO,IALpB,SASGA,EAAKG,SAXHH,EAAKH,WAmBlB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4Ca,cCxCxCd,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KAEMC,EAAelB,EAAKa,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOL,KAMjD,OACE,sBAAKM,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAW,EAAeA,EAAaN,MAAQ,WAGvC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAfkB,SAACG,GACvBY,EAAiBZ,EAAIC,WCrBzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.035cefc6.chunk.js","sourcesContent":["type Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype TabsProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<TabsProps> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const isValidTabId = tabs.some(tab => tab.id === selectedTabId);\n  const activeTabId = isValidTabId ? selectedTabId : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(item => (\n            <li\n              className={activeTabId === item.id\n                ? 'is-active'\n                : ''}\n              data-cy=\"Tab\"\n              key={item.id}\n            >\n              <a\n                href={`#${item.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (item.id !== selectedTabId) {\n                    onTabSelected(item);\n                  }\n                }}\n              >\n                {item.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTabs = tabs.find(tab => tab.id === selectedTabId);\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTabs ? selectedTabs.title : 'Tab 1'}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}