{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTabId","some","tab","id","showTabContent","find","content","className","map","item","title","cn","href","onClick","handleTabClick","App","useState","setSelectedTabId","selectedTabs","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAA4B,SAAC,GAMpC,IAAD,EAJDC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,cAIIC,EADeH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KACdA,EAAgBD,EAAK,GAAGM,GAQrDC,EAAc,UAAGP,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,aAAG,EAA4CQ,QAEnE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAACC,GACT,IAAQN,EAAcM,EAAdN,GAAIO,EAAUD,EAAVC,MAEZ,OACE,oBACEH,UAAWI,IAAG,CAAE,YAAaX,IAAgBG,IAC7C,UAAQ,MAFV,SAKE,mBACES,KAAI,WAAMT,GACV,UAAQ,UACRU,QAAS,YAxBF,SAACJ,GAClBA,EAAKN,KAAOL,GACdC,EAAcU,GAuBAK,CAAeL,IAJnB,SAOGC,KATEP,UAkBf,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QClDIP,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASJ,QAAS,eACxC,CAAEH,GAAI,QAASO,MAAO,QAASJ,QAAS,eACxC,CAAEH,GAAI,QAASO,MAAO,QAASJ,QAAS,gBAG7BS,EAAgB,WAC3B,MAA0CC,mBAASnB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBmB,EAAtB,KAEMC,EAAerB,EAAKQ,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOL,KAMjD,OACE,sBAAKS,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAeA,EAAaR,MAAQ,WAG1D,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAbkB,SAACG,GACvBe,EAAiBf,EAAIC,WCrBzBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.090f8515.chunk.js","sourcesContent":["import cn from 'classnames';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype TabsProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<TabsProps> = (\n  {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  },\n) => {\n  const isValidTabId = tabs.some(tab => tab.id === selectedTabId);\n  const activeTabId = isValidTabId ? selectedTabId : tabs[0].id;\n\n  const handleTabClick = (item: Tab) => {\n    if (item.id !== selectedTabId) {\n      onTabSelected(item);\n    }\n  };\n\n  const showTabContent = tabs.find(tab => tab.id === selectedTabId)?.content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((item) => {\n            const { id, title } = item;\n\n            return (\n              <li\n                className={cn({ 'is-active': activeTabId === id })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    handleTabClick(item);\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {showTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTabs = tabs.find(tab => tab.id === selectedTabId);\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabs ? selectedTabs.title : 'Tab 1'}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}